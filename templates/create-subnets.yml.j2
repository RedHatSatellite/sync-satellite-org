#jinja2:variable_start_string:'[%' , variable_end_string:'%]'

#- name: Generate Subnets
#  foreman_subnet:
#    server_url: "{{ target_foreman_server_url }}"
#    username: "{{ target_foreman_username }}"
#    password: "{{ target_foreman_password }}"
#    verify_ssl: "{{ foreman_verify_ssl }}"
#    name: "{{ item.Name }}"
#    boot_mode: "{{ item['Boot Mode'] }}"
#    cidr: "{{ item['Network Prefix'] }}"
#    dhcp_proxy: "{{ inventory_hostname }}"
#    dns_primary: "{{ item['Primary DNS'] }}"
#    dns_secondary: "{{ item['Secondary DNS'] }}"
#    dns_proxy: "{{ inventory_hostname }}"
#    tftp_proxy: "{{ inventory_hostname }}"
#    from_ip: "{{ item['Start of IP Range'] }}"
#    to_ip: "{{ item['End of IP Range'] }}"
#    gateway: "{{ item['Gateway Addr'] }}"
#    ipam: "{{ (item.IPAM == 'None')|ternary(omit,item.IPAM) }}"
#    mtu: "{{ item.MTU|int }}"
#    vlanid: "{{ item['VLAN ID']|int }}"
#    network_type: "{{ item.Protocol }}"
#    network: "{{ item['Network Addr'] }}"
#    domains: "{{ item.Domains | json_query('[*].Name') }}"
#    organizations:
#      - [% foreman_organization %]
#    locations: "{{ item.Locations | json_query('[*].Name') }}"
#    state: present
#  loop: [% subnet_info %]
#  delegate_to: localhost

# We need to do this with hammer at the moment as there seems to be a problem with serialisation of the Network Addr in foreman_subnet
# We're also going to assume that the ID of the built-in capsule is 1

- name: Generate Subnets
  command: >-
    hammer -s {{ target_foreman_server_url }} -u {{ target_foreman_username }} -p {{ target_foreman_password }}
    create subnet --boot-mode {{ item['Boot Mode'] }} --dhcp-id 1 --dns-id 1 --domains {{ item.Domains | json_query('[*].Name')|join(',') }}
    --from {{ item['Start of IP Range'] }} --ipam {{ (item.IPAM == 'None')|ternary(omit,item.IPAM) }} --locations {{ item.Locations | json_query('[*].Name')|join(',') }}
    --mtu {{ item.MTU|int }} --name {{ item.Name }} --network {{ item['Network Addr'] }} --network-type {{ item.Protocol }} --organization [% foreman_organization %]
    --tftp-id 1 --to {{ item['End of IP Range'] }} --vlanid {{ item['VLAN ID']|int }} --dns-primary {{ item['Primary DNS'] }} --dns-secondary {{ item['Secondary DNS'] }}
  loop: [% subnet_info %]