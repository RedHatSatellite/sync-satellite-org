#jinja2:variable_start_string:'[%' , variable_end_string:'%]'

# doesn't work - use hammer

#- name: Generate Lifecycle Environments
#  katello_lifecycle_environment:
#    server_url: "{{ target_foreman_server_url }}"
#    username: "{{ target_foreman_username }}"
#    password: "{{ target_foreman_password }}"
#    verify_ssl: "{{ foreman_verify_ssl }}"
#    name: "{{ item.Name }}"
#    prior: "{{ item.Prior }}"
#    organization: [% foreman_organization %]
#    state: present
#  loop: [% lifecycle_environments %]

# We have to delete and re-create - not great tbh

- name: Determine lifecycle environments
  command: "hammer {{ foreman_connect_string }} lifecycle-environment list --organization \"[% foreman_organization %]\""
  changed_when: false
  register: r

- name: Parse lifecycle environments
  set_fact:
    target_lifecycle_environments: "{{ r.stdout|from_json|json_query('[*].Name') }}"

- name: Delete Lifecycle Environments
  command: >-
    hammer lifecycle-environment delete
    --name {{ item.Name }} --organization [% foreman_organization %]
  loop: [% lifecycle_environments %]
  when: item.Name in target_lifecycle_environments and item.Name != 'Library'

- name: We need to create the lifecycle environments in the right order to create them

#- name: Create Lifecycle Environments
#  command: >-
#    hammer lifecycle-environment create
#    --name {{ item.Name }} --organization [% foreman_organization %] --prior "{{ item.Prior }}"
#  loop: [% lifecycle_environments %]
#  when: item.Name != 'Library'

- set_fact:
    prior: "Library"
    last_lifecycle_environment: false
# horrible workaround as until does not work on include_tasks
- name: Create Lifecycle Environments in Order
  include_tasks: create_lifecycle_environment.yml
  loop: "{{ range(0,100,1)|list }}"
