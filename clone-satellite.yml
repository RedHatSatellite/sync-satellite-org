---
- name: Generate Satellite Clone Playbook
  hosts: sat62.oldstables
  vars:
    foreman_username: "admin"
    foreman_password: "r3dhat00"
    foreman_server_url: "https://sat62.oldstables"
    foreman_verify_ssl: false
    foreman_organization: "Default_Organization"
    foreman_connect_string: "--output json -s {{ foreman_server_url }} -u {{ foreman_username }} -p {{ foreman_password }}"
    output_dir: "/tmp/clone-satellite"

  tasks:
    - name: Create output dir
      file:
        state: "directory"
        path: "{{ output_dir }}"

    - name: Determine locations
      command: "hammer {{ foreman_connect_string }} location list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
    - debug:
        var: r
        verbosity: 2
    - name: Parse Locations
      set_fact:
        locations: "{{ r.stdout | from_json }}"
    - debug:
        var: locations
        verbosity: 2
    - name: Create locations
      template:
        src: "templates/create-locations.yml.j2"
        dest: "{{ output_dir }}/create-locations.yml"

    - name: Determine domains
      command: "hammer {{ foreman_connect_string}} domain list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
    - debug:
        var: r
        verbosity: 2
    - name: Parse domains
      set_fact:
        domains: "{{ r.stdout | from_json }}"
    - debug:
        var: domains
        verbosity: 2
    - name: Extract domain info
      command: "hammer {{ foreman_connect_string }} domain info --id {{ item.Id }} --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
      loop: "{{ domains }}"
    - set_fact:
        domain_info: "{{ r.results | json_query('[*].stdout') | map('from_json') | list }}"
    - debug:
        var: domain_info
        verbosity: 2
    - name: Create domains
      template:
        src: "templates/create-domains.yml.j2"
        dest: "{{ output_dir }}/create-domains.yml"

    - name: Determine subnets
      command: "hammer {{ foreman_connect_string }} subnet list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
    - debug:
        var: r
        verbosity: 2
    - name: Parse subnets
      set_fact:
        subnets: "{{ r.stdout | from_json }}"
    - name: Extract subnet info
      command: "hammer {{ foreman_connect_string}} subnet info --id {{ item.Id }} --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
      loop: "{{ subnets }}"
    - set_fact:
        subnet_info: "{{ r.results | json_query('[*].stdout') | map('from_json') | list }}"
    - debug:
        var: subnet_info
        verbosity: 2
    - name: Create subnets
      template:
        src: "templates/create-subnets.yml.j2"
        dest: "{{ output_dir }}/create-subnets.yml"

    - name: Determine lifecycle environments
      command: "hammer {{ foreman_connect_string }} lifecycle-environment list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
    - debug:
        var: r
        verbosity: 2
    - name: Parse lifecycle environments
      set_fact:
        lifecycle_environments: "{{ r.stdout | from_json }}"
    - debug:
        var: lifecycle_environments
        verbosity: 2
    - name: Create lifecycle environments
      template:
        src: "templates/create-lifecycle-environments.yml.j2"
        dest: "{{ output_dir }}/create-lifecycle-environments.yml"

    - name: Lookup repos
      command: "hammer {{ foreman_connect_string }} repository list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
      tags: repos
    - debug:
        var: r
        verbosity: 2
      tags: repos
    - name: Parse repos
      set_fact:
        repos: "{{ r.stdout | from_json }}"
      tags: repos
    - debug:
        var: repos
        verbosity: 1
      tags: repos


    - name: Determine content views
      command: "hammer {{ foreman_connect_string }} content-view list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: r
      tags: cv
    - debug:
        var: r
        verbosity: 2
      tags: cv
    - name: Parse content views
      set_fact:
        content_views: "{{ r.stdout | from_json }}"
      tags: cv
    - debug:
        var: content_views
        verbosity: 1
      tags: cv
    - name: Map repos
      include_tasks: map_repos.yml
      loop: "{{ content_views }}"
      loop_control:
        loop_var: cv
      tags: cv

    - fail:
      when: true
      tags: cv


    - name: Determine activation keys
      command: "hammer {{ foreman_connect_string }} activation-key list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: activation_keys
    - debug:
        var: activation_keys
        verbosity: 2

    - name: Determine partition tables
      command: "hammer {{ foreman_connect_string }} partition-table list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: partition_tables
    - debug:
        var: partition_tables
        verbosity: 2

    - name: Determine templates
      command: "hammer {{ foreman_connect_string }} template list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: templates
    - debug:
        var: templates
        verbosity: 2

    - name: Determine operating systems
      command: "hammer {{ foreman_connect_string }} os list"
      changed_when: false
      register: os
    - debug:
        var: os
        verbosity: 2

    - name: Determine hostgroups
      command: "hammer {{ foreman_connect_string }} hostgroup list --organization \"{{ foreman_organization }}\""
      changed_when: false
      register: hostgroups
    - debug:
        var: hostgroups
        verbosity: 2



#      foreman_location:
#        name: foo
#        username: "{{ foreman_username }}"
#        password: "{{ foreman_password }}"
#        server_url: "{{ foreman_server_url }}"
#        verify_ssl: "{{ foreman_verify_ssl }}"
#      register: output
#    - debug:
#        var: output


# Locations
# Determine locations


# Write template fragment




# Domains


# Subnets



# Lifecycle environments




# Content Views





# Activation keys





# Partition tables





# Templates




# Operating system defaults



# Hostgroups


# Master include
